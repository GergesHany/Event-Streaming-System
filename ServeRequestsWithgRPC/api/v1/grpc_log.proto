syntax = "proto3";

package grpc.log.v1;

option go_package = "github.com/GergesHany/Event-Streaming-System/ServeRequestsWithgRPC/api/v1;log_v1";

service Log {
  rpc Produce(ProduceRequest) returns (ProduceResponse) {}
  rpc Consume(ConsumeRequest) returns (ConsumeResponse) {}
  rpc ConsumeStream(ConsumeRequest) returns (stream ConsumeResponse) {}
  rpc ProduceStream(stream ProduceRequest) returns (stream ProduceResponse) {}
}

message ProduceRequest  {
  Record record = 1;
}

message ProduceResponse  {
  uint64 offset = 1;
}

message ConsumeRequest {
  uint64 offset = 1;
}

message ConsumeResponse {
  Record record = 2;
}

message Record {
  bytes value = 1;
  uint64 offset = 2;
}

/*
  - "ConsumeStream" a server-side streaming RPC where the client sends a request to the server and gets back a stream to read a sequence of messages.
  - "ProduceStream" a bidirectional streaming RPC where both the client and server send a sequence of messages using a read-write stream.
*/